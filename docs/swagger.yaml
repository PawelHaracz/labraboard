definitions:
  aggregates.Iac:
    properties:
      iacType:
        $ref: '#/definitions/valueobjects.IaCType'
      repo:
        $ref: '#/definitions/valueobjects.IaCRepo'
    type: object
  api.ProjectDto:
    properties:
      type:
        type: integer
    type: object
  valueobjects.IaCRepo:
    properties:
      defaultBranch:
        type: string
      path:
        type: string
      url:
        type: string
    type: object
  valueobjects.IaCType:
    enum:
    - 0
    type: integer
    x-enum-varnames:
    - Terraform
info:
  contact: {}
paths:
  /example/helloworld:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping example
      tags:
      - example
  /project:
    get:
      consumes:
      - application/json
      description: projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aggregates.Iac'
            type: array
      summary: Get all projects
      tags:
      - project
    post:
      consumes:
      - application/json
      description: Create a new project
      parameters:
      - description: Create project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/api.ProjectDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create a new project
      tags:
      - project
  /project/{projectId}:
    get:
      consumes:
      - application/json
      description: Fetch a project by id
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aggregates.Iac'
      summary: Fetch a project by id
      tags:
      - project
  /state/terraform/{projectId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get terraform state for a given project
      tags:
      - terraform
      - state
    post:
      consumes:
      - application/json
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Update terraform state for a given project
      tags:
      - terraform
      - state
  /terraform/{projectId}/plan:
    get:
      consumes:
      - application/json
      description: do ping
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Fetch all the terraform plans for a given project
      tags:
      - terraform
    post:
      consumes:
      - application/json
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Method to run Terraform Plan for a given project and return the plan
        id
      tags:
      - terraform
  /terraform/{projectId}/plan/{planId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      - description: plan id
        in: path
        name: planId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Method returns the terraform plan output for a given plan id
      tags:
      - terraform
  /terraform/{projectId}/plan/{planId}/apply:
    post:
      consumes:
      - application/json
      description: do ping
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      - description: plan id
        in: path
        name: planId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Method Apply changes for a given plan id return deployment id
      tags:
      - terraform
  /terraform/{projectId}/plan/{planId}/apply/{deploymentId}:
    get:
      consumes:
      - application/json
      description: do ping
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      - description: plan id
        in: path
        name: planId
        required: true
        type: string
      - description: deployment id
        in: path
        name: deploymentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Method to fetch deployment status for a given deployment id
      tags:
      - terraform
swagger: "2.0"
