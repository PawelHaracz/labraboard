{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/example/helloworld": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/project": {
            "get": {
                "description": "projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get all projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.GetProjectBaseDto"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Create project",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateProjectDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/project/{projectId}": {
            "get": {
                "description": "Fetch a project by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Fetch a project by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetProjectDto"
                        }
                    }
                }
            }
        },
        "/project/{projectId}/env": {
            "put": {
                "description": "Add new env to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Add new env to a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Env to add",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AddEnvDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/project/{projectId}/env/{envName}": {
            "delete": {
                "description": "Remove new env to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Remove new env to a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "envName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/project/{projectId}/variable": {
            "put": {
                "description": "Add new variable to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Add new variable to a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Env to add",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AddVariableDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/project/{projectId}/variable/{variableName}": {
            "delete": {
                "description": "Remove new variable to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Remove new variable to a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "variable name",
                        "name": "variableName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/state/terraform/{projectId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "state"
                ],
                "summary": "Get terraform state for a given project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "state"
                ],
                "summary": "Update terraform state for a given project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/terraform/{projectId}/plan": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "terraform"
                ],
                "summary": "Fetch all the terraform plans for a given project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.PlanDto"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "terraform"
                ],
                "summary": "Method to run Terraform Plan for a given project and return the plan id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/terraform/{projectId}/plan/{planId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "terraform"
                ],
                "summary": "Method returns the terraform plan output for a given plan id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "plan id",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.PlanWithOutputDto"
                        }
                    }
                }
            }
        },
        "/terraform/{projectId}/plan/{planId}/apply": {
            "post": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "terraform"
                ],
                "summary": "Method Apply changes for a given plan id return deployment id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "plan id",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/terraform/{projectId}/plan/{planId}/apply/{deploymentId}": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "terraform"
                ],
                "summary": "Method to fetch deployment status for a given deployment id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "plan id",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "deployment id",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/terraform/{projectId}/plan/{planId}/schedule": {
            "post": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "terraform"
                ],
                "summary": "Fetch all the terraform plans for a given project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "plan id",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schedule plan",
                        "name": "schedulePlan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SchedulePlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.PlanDto"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.AddEnvDto": {
            "type": "object",
            "properties": {
                "isSecret": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dtos.AddVariableDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateProjectDto": {
            "type": "object",
            "properties": {
                "repositoryBranch:": {
                    "type": "string"
                },
                "repositoryTerraformPath": {
                    "type": "string"
                },
                "repositoryUrl": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "dtos.GetProjectBaseDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "dtos.GetProjectDto": {
            "type": "object",
            "properties": {
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "repositoryBranch:": {
                    "type": "string"
                },
                "repositoryTerraformPath": {
                    "type": "string"
                },
                "repositoryUrl": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "dtos.PlanDto": {
            "type": "object",
            "properties": {
                "createdOn": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dtos.PlanWithOutputDto": {
            "type": "object",
            "properties": {
                "createdOn": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "outputs": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "dtos.SchedulePlan": {
            "type": "object",
            "properties": {
                "when": {
                    "type": "string"
                }
            }
        }
    }
}